<Window
    x:Class="Demo.Controls.Windows.SignUpPop"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Demo.Controls.Windows"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="SignUpPop"
    Width="400"
    Height="550"
    ResizeMode="NoResize"
    TextOptions.TextFormattingMode="Display"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">

    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle
                                Height="54"
                                Fill="#FFC74066"
                                RadiusX="25"
                                RadiusY="25"
                                Stroke="#FF848484" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="18"
                                Foreground="White"
                                TextWrapping="Wrap"><Run Language="zh-tw" Text="SIGN UP" /></TextBlock>
                            <Ellipse
                                Width="50"
                                Height="50"
                                Margin="201,2,3,2"
                                Fill="White" />
                            <Image
                                Height="25"
                                Margin="214,0,14,0"
                                VerticalAlignment="Center"
                                Source="pack://application:,,,/Demo.Controls;component/Assets/Icons/play.png" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true" />
                            <Trigger Property="IsMouseOver" Value="true" />
                            <Trigger Property="IsPressed" Value="true" />
                            <Trigger Property="IsEnabled" Value="false" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse
                                Width="45"
                                Height="45"
                                Stroke="Black" />
                            <Image
                                Width="25"
                                Height="25"
                                Source="pack://application:,,,/Demo.Controls;component/Assets/Icons/facebook.png" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true" />
                            <Trigger Property="IsMouseOver" Value="true" />
                            <Trigger Property="IsPressed" Value="true" />
                            <Trigger Property="IsEnabled" Value="false" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse
                                Width="45"
                                Height="45"
                                Stroke="Black" />
                            <Image
                                Width="25"
                                Height="25"
                                Source="pack://application:,,,/Demo.Controls;component/Assets/Icons/Twitter.png" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true" />
                            <Trigger Property="IsMouseOver" Value="true" />
                            <Trigger Property="IsPressed" Value="true" />
                            <Trigger Property="IsEnabled" Value="false" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyle4" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse
                                Width="45"
                                Height="45"
                                Stroke="Black" />
                            <Image
                                Width="25"
                                Height="25"
                                Source="pack://application:,,,/Demo.Controls;component/Assets/Icons/google.png" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true" />
                            <Trigger Property="IsMouseOver" Value="true" />
                            <Trigger Property="IsPressed" Value="true" />
                            <Trigger Property="IsEnabled" Value="false" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyle5" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse
                                Width="45"
                                Height="45"
                                Stroke="Black" />
                            <Image
                                Width="25"
                                Height="25"
                                Source="pack://application:,,,/Demo.Controls;component/Assets/Icons/instagram.png" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true" />
                            <Trigger Property="IsMouseOver" Value="true" />
                            <Trigger Property="IsPressed" Value="true" />
                            <Trigger Property="IsEnabled" Value="false" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TextBox.Static.Border" Color="White" />
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="White" />
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="White" />
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="PasswordBoxStyle1" TargetType="{x:Type PasswordBox}">
            <Setter Property="PasswordChar" Value="●" />
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Storyboard x:Key="FadeInAnimation">
            <DoubleAnimation
                Storyboard.TargetProperty="Opacity"
                From="0"
                To="1"
                Duration="0:0:0.5" />
        </Storyboard>

    </Window.Resources>

    <Grid>
        <TextBlock
            Width="400"
            Height="38"
            Margin="0,30,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            FontSize="30"
            FontWeight="Bold"
            Foreground="Black"
            TextAlignment="Center"
            TextWrapping="Wrap"><Run Language="zh-tw" Text="Create account" /></TextBlock>

        <TextBox
            x:Name="txt_Email"
            Width="350"
            Height="40"
            Margin="0,120,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            VerticalContentAlignment="Center"
            BorderBrush="{x:Null}"
            FontSize="20"
            Foreground="#FF444444"
            GotFocus="txt_Email_GotFocus"
            LostFocus="txt_Email_LostFocus"
            SelectionBrush="{x:Null}"
            Style="{DynamicResource TextBoxStyle1}"
            TextChanged="txt_Email_TextChanged"
            TextWrapping="Wrap" />
        <Label
            x:Name="lbl_Email"
            Width="350"
            Height="40"
            Margin="0,120,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Content="Your Email"
            FontSize="14"
            FontWeight="Bold"
            Foreground="#FF444444"
            IsHitTestVisible="False" />
        <Path
            Width="350"
            Margin="0,160,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Data="M25,160 L375,160"
            Stretch="Fill"
            Stroke="#FF444444" />
        <Path
            Width="350"
            Margin="0,242,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Data="M25,160 L375,160"
            Stretch="Fill"
            Stroke="#FF444444" />
        <Path
            Width="350"
            Margin="0,325,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Data="M25,160 L375,160"
            Stretch="Fill"
            Stroke="#FF444444" />
        <Image
            x:Name="img_noEmail"
            Width="30"
            Height="30"
            Margin="343,125,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Source="pack://application:,,,/Demo.Controls;component/Assets/Icons/error.png"
            Visibility="Hidden" />
        <Image
            x:Name="img_yesEmail"
            Width="34"
            Height="34"
            Margin="341,123,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Source="pack://application:,,,/Demo.Controls;component/Assets/Icons/ok.png"
            Visibility="Hidden" />
        <PasswordBox
            x:Name="txt_Password"
            Width="352"
            Height="40"
            Margin="0,202,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            VerticalContentAlignment="Center"
            BorderBrush="{x:Null}"
            FontSize="20"
            Foreground="#FF444444"
            GotFocus="txt_Password_GotFocus"
            LostFocus="txt_Password_LostFocus"
            PasswordChanged="txt_Password_PasswordChanged"
            Style="{DynamicResource PasswordBoxStyle1}" />
        <Label
            x:Name="lbl_Password"
            Width="350"
            Height="40"
            Margin="0,202,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Content="Password"
            FontSize="14"
            FontWeight="Bold"
            Foreground="#FF444444"
            IsHitTestVisible="False" />
        <PasswordBox
            x:Name="txt_ConfirmPassword"
            Width="352"
            Height="40"
            Margin="0,285,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            VerticalContentAlignment="Center"
            BorderBrush="{x:Null}"
            FontSize="20"
            Foreground="#FF444444"
            GotFocus="txt_ConfirmPassword_GotFocus"
            LostFocus="txt_ConfirmPassword_LostFocus"
            PasswordChanged="txt_ConfirmPassword_PasswordChanged"
            Style="{DynamicResource PasswordBoxStyle1}" />
        <Label
            x:Name="lbl_CPassword"
            Width="350"
            Height="40"
            Margin="0,286,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Content="Confirm Password"
            FontSize="14"
            FontWeight="Bold"
            Foreground="#FF444444"
            IsHitTestVisible="False" />
        <Image
            x:Name="img_noPass"
            Width="30"
            Height="30"
            Margin="343,291,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Source="pack://application:,,,/Demo.Controls;component/Assets/Icons/error.png"
            Visibility="Hidden" />
        <Image
            x:Name="img_yesPass"
            Width="34"
            Height="34"
            Margin="341,289,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Source="pack://application:,,,/Demo.Controls;component/Assets/Icons/ok.png"
            Visibility="Hidden" />
        <Button
            Width="254"
            Height="54"
            Margin="0,368,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Content="Button"
            RenderTransformOrigin="0.5 0.5"
            Style="{DynamicResource ButtonStyle1}"
            UseLayoutRounding="True">
            <Button.RenderTransform>
                <ScaleTransform />
            </Button.RenderTransform>
            <Button.Effect>
                <DropShadowEffect
                    Direction="270"
                    Opacity="0.25"
                    ShadowDepth="5"
                    Color="Black" />
            </Button.Effect>
            <Button.Triggers>
                <EventTrigger RoutedEvent="Button.Loaded">
                    <BeginStoryboard Storyboard="{StaticResource FadeInAnimation}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.PreviewMouseDown">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                To="0.9"
                                Duration="0:0:0.2" />
                            <DoubleAnimation
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                To="0.9"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.PreviewMouseUp">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                To="1"
                                Duration="0:0:0.2" />
                            <DoubleAnimation
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                To="1"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Button.Triggers>

        </Button>
        <TextBlock
            Width="35"
            Height="35"
            Margin="0,431,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            FontSize="22"
            FontWeight="Bold"
            TextAlignment="Center"
            TextWrapping="Wrap"><Run Language="zh-tw" Text="or" /></TextBlock>
        <Button
            Width="45"
            Height="45"
            Margin="73,475,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Content="Button"
            IsTabStop="False"
            Style="{DynamicResource ButtonStyle2}" />
        <Button
            Width="45"
            Height="45"
            Margin="142,475,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Content="Button"
            IsTabStop="False"
            Style="{DynamicResource ButtonStyle3}" />
        <Button
            Width="45"
            Height="45"
            Margin="212,475,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Content="Button"
            IsTabStop="False"
            Style="{DynamicResource ButtonStyle4}" />
        <Button
            Width="45"
            Height="45"
            Margin="282,475,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Content="Button"
            IsTabStop="False"
            Style="{DynamicResource ButtonStyle5}" />
        <Grid
            x:Name="grid_Unreliable"
            Width="70"
            Margin="303,216,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Visibility="Hidden">
            <TextBlock
                Width="70"
                Height="21"
                Foreground="#FFFF4545"
                TextWrapping="Wrap"><Run Language="zh-tw" Text="Unreliable" /></TextBlock>
            <Rectangle
                Width="20"
                Height="3"
                Margin="0,18,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Fill="#FFFF4545" />

        </Grid>
        <Grid
            x:Name="grid_Average"
            Width="70"
            Margin="303,216,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Visibility="Hidden">
            <TextBlock
                Width="70"
                Height="21"
                Foreground="#FFED8125"
                TextWrapping="Wrap"><Run Language="zh-tw" Text="Average" /></TextBlock>
            <Rectangle
                Width="20"
                Height="3"
                Margin="0,18,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Fill="#FFED8125" />
            <Rectangle
                Width="20"
                Height="3"
                Margin="25,18,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Fill="#FFED8125" />

        </Grid>
        <Grid
            x:Name="grid_Complicated"
            Width="70"
            Margin="303,216,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Visibility="Hidden">
            <TextBlock
                Width="70"
                Height="21"
                Foreground="#FF34E01C"
                TextWrapping="Wrap"><Run Language="zh-tw" Text="Complicated" /></TextBlock>
            <Rectangle
                Width="20"
                Height="3"
                Margin="0,18,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Fill="#FF34E01C" />
            <Rectangle
                Width="20"
                Height="3"
                Margin="25,18,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Fill="#FF34E01C"
                RenderTransformOrigin="0.5,0.5">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform Angle="0" />
                        <TranslateTransform />
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle
                Width="20"
                Height="3"
                Margin="50,18,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Fill="#FF34E01C" />
        </Grid>
        <TextBlock
            x:Name="tb_nofity"
            Height="20"
            Margin="28,247,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Foreground="#FF797979"
            Text="Your password must be at least 6 characters"
            TextWrapping="Wrap"
            Visibility="Hidden" />

    </Grid>
</Window>
