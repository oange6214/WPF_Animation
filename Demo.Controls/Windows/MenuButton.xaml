<Window
    x:Class="Demo.Controls.MenuButton"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Demo.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="MenuButton"
    Width="380"
    Height="450"
    AllowsTransparency="True"
    Background="Transparent"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">

    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FFF" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFF" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FFF" />


        <Style x:Key="ButtonStyleBase" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
        </Style>

        <Style
            x:Key="ButtonStyle1"
            BasedOn="{StaticResource ButtonStyleBase}"
            TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="30,30,30,30"
                            UseLayoutRounding="True">
                            <Image
                                Width="25"
                                Margin="3,3,3,3"
                                Source="pack://application:,,,/Demo.Controls;component/Assets/Images/home-filling.png" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="ButtonStyle2"
            BasedOn="{StaticResource ButtonStyleBase}"
            TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="30,30,30,30"
                            SnapsToDevicePixels="true">
                            <Image
                                Width="25"
                                Margin="3,3,3,3"
                                Source="pack://application:,,,/Demo.Controls;component/Assets/Images/plus.png" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="ButtonStyle3"
            BasedOn="{StaticResource ButtonStyleBase}"
            TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="30,30,30,30"
                            UseLayoutRounding="True">
                            <Image
                                Width="25"
                                Margin="3,3,3,3"
                                Source="pack://application:,,,/Demo.Controls;component/Assets/Images/settings.png" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyle4" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="30,30,30,30"
                            SnapsToDevicePixels="true">
                            <Image
                                Width="25"
                                Margin="3,3,3,3"
                                Source="pack://application:,,,/Demo.Controls;component/Assets/Images/multiply.png" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyle5" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="White"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="30,30,30,30"
                            SnapsToDevicePixels="true">
                            <Image
                                Width="25"
                                Margin="3,3,3,3"
                                OpacityMask="White"
                                Source="pack://application:,,,/Demo.Controls;component/Assets/Images/camera.png" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FFF" />
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFF" />
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFF" />
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle6" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="White"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="30,30,30,30"
                            SnapsToDevicePixels="true">
                            <Image
                                Width="25"
                                Margin="3,3,3,3"
                                OpacityMask="White"
                                Source="pack://application:,,,/Demo.Controls;component/Assets/Images/folder.png" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background1}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border1}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background1}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border1}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background1}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border1}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FFF" />
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFF" />
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF" />
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFF" />
        <Style x:Key="FocusVisual3">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle7" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="White"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="30,30,30,30"
                            SnapsToDevicePixels="true">
                            <Image
                                Width="25"
                                Margin="3,3,3,3"
                                OpacityMask="White"
                                Source="pack://application:,,,/Demo.Controls;component/Assets/Images/image.png" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background2}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border2}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background2}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border2}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background2}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border2}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Window.Triggers>
        <EventTrigger RoutedEvent="Button.Click" SourceName="button1">
            <BeginStoryboard x:Name="MyBeginStoryboard1">
                <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="3" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="-3" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="button1" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                        <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Hidden}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="button2" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}" />
                        <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Visible}" />
                    </ObjectAnimationUsingKeyFrames>
                    <PointAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[5].(BezierSegment.Point2)">
                        <EasingPointKeyFrame KeyTime="00:00:00" Value="4.1142302804267E-38,0.26494928" />
                        <EasingPointKeyFrame KeyTime="00:00:00.3000000" Value="126.661463333333,17.8597783747384" />
                    </PointAnimationUsingKeyFrames>
                    <PointAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[5].(BezierSegment.Point1)">
                        <EasingPointKeyFrame KeyTime="00:00:00" Value="379.98439,2.2420777934914E-44" />
                        <EasingPointKeyFrame KeyTime="00:00:00.3000000" Value="253.322926666667,17.9223205704489" />
                    </PointAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button1_Copy" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button1_Copy" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="-82" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button1_Copy1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button1_Copy1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="-82" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button1_Copy2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button1_Copy2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="-82" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>

        <EventTrigger RoutedEvent="Button.Click" SourceName="button2">
            <BeginStoryboard x:Name="MyBeginStoryboard2">
                <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                        <EasingDoubleKeyFrame KeyTime="00:00:0" Value="3" />
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                        <EasingDoubleKeyFrame KeyTime="00:00:0" Value="-3" />
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="button1" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:0" Value="{x:Static Visibility.Hidden}" />
                        <DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="{x:Static Visibility.Visible}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="button2" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:0" Value="{x:Static Visibility.Visible}" />
                        <DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="{x:Static Visibility.Hidden}" />
                    </ObjectAnimationUsingKeyFrames>
                    <PointAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[5].(BezierSegment.Point2)">
                        <EasingPointKeyFrame KeyTime="00:00:0" Value="126.661463333333,17.8597783747384" />
                        <EasingPointKeyFrame KeyTime="00:00:00.3" Value="4.1142302804267E-38,0.26494928" />
                    </PointAnimationUsingKeyFrames>
                    <PointAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Path.Data).(PathGeometry.Figures)[0].(PathFigure.Segments)[5].(BezierSegment.Point1)">
                        <EasingPointKeyFrame KeyTime="00:00:0" Value="253.322926666667,17.9223205704489" />
                        <EasingPointKeyFrame KeyTime="00:00:00.3" Value="379.98439,2.2420777934914E-44" />
                    </PointAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button1_Copy" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                        <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button1_Copy" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                        <EasingDoubleKeyFrame KeyTime="00:00:0" Value="-82" />
                        <EasingDoubleKeyFrame KeyTime="00:00:0.3" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button1_Copy1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                        <EasingDoubleKeyFrame KeyTime="00:00:0" Value="1" />
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button1_Copy1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                        <EasingDoubleKeyFrame KeyTime="00:00:0" Value="-82" />
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button1_Copy2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                        <EasingDoubleKeyFrame KeyTime="00:00:0" Value="1" />
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="button1_Copy2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                        <EasingDoubleKeyFrame KeyTime="00:00:0" Value="-82" />
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>

    <Grid>
        <Rectangle
            x:Name="rectangle"
            Width="380"
            Height="450"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            d:IsLocked="True"
            Fill="#FF5252FF"
            RadiusX="5"
            RadiusY="5" />
        <Button
            x:Name="button1_Copy"
            Width="40"
            Height="40"
            Margin="0,390,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Background="{x:Null}"
            BorderBrush="{x:Null}"
            Content="Button"
            RenderTransformOrigin="0.5,0.5"
            Style="{DynamicResource ButtonStyle5}">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button
            x:Name="button1_Copy1"
            Width="40"
            Height="40"
            Margin="228,402,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Background="{x:Null}"
            BorderBrush="{x:Null}"
            Content="Button"
            RenderTransformOrigin="0.5,0.5"
            Style="{DynamicResource ButtonStyle6}">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button
            x:Name="button1_Copy2"
            Width="40"
            Height="40"
            Margin="112,402,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Background="{x:Null}"
            BorderBrush="{x:Null}"
            Content="Button"
            RenderTransformOrigin="0.5,0.5"
            Style="{DynamicResource ButtonStyle7}">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Path
            x:Name="path"
            Width="380"
            Height="80"
            Margin="0,370,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            d:IsLocked="True"
            Fill="White">
            <Path.Data>
                <PathGeometry>
                    <PathFigure IsClosed="True" StartPoint="4.1142302804267E-38,0.26494928">
                        <BezierSegment
                            Point1="4.1142302804267E-38,0.26494928"
                            Point2="0.0156244279999987,73.635872"
                            Point3="0.0156244279999987,74.857596" />
                        <BezierSegment
                            Point1="0.0156244279999987,77.616075"
                            Point2="1.9208347,80.000021"
                            Point3="5.109165,80.000008" />
                        <BezierSegment
                            Point1="118.34931,79.999503"
                            Point2="372.71543,79.984203"
                            Point3="375.04708,79.984203" />
                        <BezierSegment
                            Point1="377.52789,79.984203"
                            Point2="380.00001,78.029563"
                            Point3="380.00001,74.987341" />
                        <BezierSegment
                            Point1="380.00001,74.987341"
                            Point2="379.98439,2.2420777934914E-44"
                            Point3="379.98439,2.2420777934914E-44" />
                        <BezierSegment
                            Point1="379.98439,2.2420777934914E-44"
                            Point2="4.1142302804267E-38,0.26494928"
                            Point3="4.1142302804267E-38,0.26494928" />
                    </PathFigure>
                </PathGeometry>
            </Path.Data>
        </Path>
        <Button
            x:Name="button3"
            Width="40"
            Height="40"
            Margin="65,390,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            d:IsLocked="True"
            Background="{x:Null}"
            BorderBrush="{x:Null}"
            Content="Button"
            RenderTransformOrigin="0.5,0.5"
            Style="{DynamicResource ButtonStyle1}">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button
            x:Name="button"
            Width="40"
            Height="40"
            Margin="265,390,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            d:IsLocked="True"
            Background="{x:Null}"
            BorderBrush="{x:Null}"
            Content="Button"
            RenderTransformOrigin="0.5,0.5"
            Style="{DynamicResource ButtonStyle3}">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button
            x:Name="button1"
            Width="40"
            Height="40"
            Margin="0,390,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            d:IsLocked="True"
            Background="{x:Null}"
            BorderBrush="{x:Null}"
            Content="Button"
            Style="{DynamicResource ButtonStyle2}" />
        <Button
            x:Name="button2"
            Width="40"
            Height="40"
            Margin="0,390,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            d:IsLocked="True"
            Background="{x:Null}"
            BorderBrush="{x:Null}"
            Content="Button"
            Style="{DynamicResource ButtonStyle4}"
            Visibility="Hidden" />
    </Grid>
</Window>
